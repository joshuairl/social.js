// Generated by CoffeeScript 1.3.3
(function() {
  var Facebook,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Facebook = (function(_super) {
    var apiUrl, getUserFql, instance, moduleExport, wrap;

    __extends(Facebook, _super);

    function Facebook(params, callback) {
      this.params = params;
      this.callback = callback;
      return;
    }

    instance = Facebook;

    apiUrl = "http://connect.facebook.net/en_US/all.js";

    wrap = function() {
      return window[params.wrapperName];
    };

    getUserFql = function(fields, uids) {
      return "SELECT " + fields + " FROM user WHERE uid IN (" + uids + ")";
    };

    moduleExport = {
      raw: null,
      unifyFields: {
        id: "uid",
        first_name: "first_name",
        last_name: "last_name",
        photo: "pic_square",
        gender: function() {
          var value;
          value = (arguments_.length ? arguments_[0] : false);
          if (!value) {
            return "sex";
          }
          if (value === "male") {
            return "male";
          } else {
            return "female";
          }
        }
      },
      getProfiles: function(uids, callback, errback) {
        if (!(uids instanceof Array)) {
          uids = (uids + "").split(",");
        }
        return FB.Data.query(getUserFql(wrap().getApiFields(params.fields), uids.join(","))).wait(function(data) {
          return callback(wrap().unifyProfileFields(data));
        });
      },
      getFriends: function(callback, errback) {
        return FB.Data.query(getUserFql(wrap().getApiFields(params.fields), "SELECT uid2 FROM friend WHERE uid1 = me()")).wait(function(data) {
          return callback(wrap().unifyProfileFields(data));
        });
      },
      getCurrentUser: function(callback, errback) {
        return moduleExport.getProfiles(FB.getSession().uid, (function(data) {
          return callback(data[0]);
        }), errback);
      },
      getAppFriends: function(callback, errback) {
        return FB.api({
          method: "friends.getAppUsers"
        }, function(data) {
          return callback(data);
        });
      },
      inviteFriends: function() {
        var local_callback, local_params;
        local_params = arguments_[0] || null;
        local_callback = arguments_[1] || null;
        if (typeof local_params === "function") {
          local_callback = local_params;
        }
        return FB.ui({
          method: "apprequests",
          message: local_params.install_message,
          data: {}
        }, function(data) {
          if (local_callback) {
            return local_callback(data);
          } else {
            return null;
          }
        });
      },
      resizeCanvas: function(params, callback) {
        FB.Canvas.setAutoResize(false);
        FB.Canvas.setSize(params.height);
        if (callback) {
          return callback();
        } else {
          return null;
        }
      },
      postWall: function(params, callback, errback) {
        params = jQuery.extend({
          id: FB.getSession().uid
        }, params);
        params.to = params.id;
        return FB.ui(jQuery.extend({
          method: "feed"
        }, params), function(response) {
          return callback(response);
        });
      },
      makePayment: function(params, callback, errback, closeDialogback) {
        return FB.ui({
          method: "pay",
          order_info: params.order_info,
          purchase_type: "item"
        }, function(data) {
          if (data["order_id"]) {
            return callback(data);
          } else {
            return callback({});
          }
        });
      }
    };

    if (!jQuery("#fb-root").length) {
      jQuery("body").prepend(jQuery("<div id='fb-root'></div>"));
    }

    jQuery.getScript(apiUrl, function() {
      FB.init({
        appId: params.fb_id,
        status: true,
        cookie: true,
        xfbml: false
      });
      moduleExport.raw = FB;
      instance.moduleExport = moduleExport;
      if (callback) {
        return callback();
      } else {
        return null;
      }
    });

    return Facebook;

  })(Module);

}).call(this);
